version: 2.1

commands:
  run_tests:
    parameters:
      results_path:
        type: string
        default: /tmp/test-results
    steps:
      - run:
          name: Run tests
          environment:
            TEST_RESULTS: << parameters.results_path >>
          command: |
            PACKAGE_NAMES=$(go list ./...)
            mkdir -p $TEST_RESULTS
            gotestsum \
              --format=short-verbose \
              --junitfile $TEST_RESULTS/gotestsum-report.xml \
              -- $PACKAGE_NAMES
      - store_test_results:
          path: << parameters.results_path >>
      - store_artifacts:
          path: << parameters.results_path >>

executors:
  go:
    docker:
      - image: circleci/golang:1.13.3
    shell: /usr/bin/env bash -euo pipefail -c

jobs:
  go-test:
    executor: go
    steps:
      - checkout

      - restore_cache: # restore cache if it exists
          keys:
            - go-retryablehttp-modcache-v1-{{ checksum "go.mod" }}

      - run: go mod download

      # save go module cache if the go.mod file has changed
      - save_cache:
          key: go-retryablehttp-modcache-v1-{{ checksum "go.mod" }}
          paths:
            - "/go/pkg/mod"

      # check go fmt output because it does not report
      # non-zero when there are fmt changes
      - run:
          name: check go fmt
          command: |
            files=$(go fmt ./...)
            if [ -n "$files" ]; then
              echo "The following file(s) do not conform to go fmt:"
              echo "$files"
              exit 1
            fi

      - run_tests

workflows:
  test-and-build:
    jobs:
      - go-test
